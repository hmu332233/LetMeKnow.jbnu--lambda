# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ParseFood

on:
  workflow_dispatch:
  schedule:
  - cron: '0 20 * * *' # 5시
  - cron: '0 0 * * 1' # 9시
  - cron: '0 2 * * 1'  # 11시
  - cron: '0 9 * * 1' # 18시

jobs:
  parse:

    runs-on: ubuntu-latest
    
    env:
      WORKING_DIRECTORY: ./ncloud/parseFood

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        # cache: 'yarn' cache 사용시 action이 실행되는 디렉토리에서 yarn.lock 파일을 찾는데, 이번 같은 경우는 특정 디렉토리에서 캐싱을 하기 때문에 불가능

    - name: Cache node modules
      uses: actions/cache@v3
      id: cache # 해당 step을 대표하는 id를 설정, 밑에서 steps.cache.outputs.cache-hit 와 같은 값을 이용해서 캐싱되었을때 특정 step을 넘어가거나 할 수도 있음
      with:
        path: ${{ env.WORKING_DIRECTORY }}/node_modules
        key: ${{ runner.os }}-yarn-parse-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-parse-

    - name: Install
      run: yarn install
      working-directory: ${{ env.WORKING_DIRECTORY }}
    - name: Run
      run: yarn start
      env:
        DB_URL: ${{ secrets.DB_URL }}
        BOT_URL: ${{ secrets.BOT_URL }}
        PARSE_TARGET_URL: ${{ secrets.PARSE_TARGET_URL }}
      working-directory: ${{ env.WORKING_DIRECTORY }}
    - name: Create history file
      uses: EndBug/add-and-commit@v9
      with:
        add: '.'
        default_author: github_actions
        pathspec_error_handling: exitImmediately
        push: 'origin master'
